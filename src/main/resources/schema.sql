DROP TABLE IF EXISTS LIKES CASCADE;
DROP TABLE IF EXISTS MPA_RATING CASCADE;
DROP TABLE IF EXISTS FRIENDS CASCADE;
DROP TABLE IF EXISTS FILM_DIRECTOR CASCADE;
DROP TABLE IF EXISTS DIRECTORS CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;
DROP TABLE IF EXISTS FILM_GENRE CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS REVIEWS CASCADE;
DROP TABLE IF EXISTS REVIEWS_LIKES CASCADE;
DROP TABLE IF EXISTS FEEDS CASCADE;
DROP TABLE IF EXISTS EVENT_OPERATIONS CASCADE;
DROP TABLE IF EXISTS EVENT_TYPES CASCADE;

CREATE TABLE IF NOT EXISTS DIRECTORS
(
    DIRECTOR_ID BIGINT AUTO_INCREMENT,
    NAME        VARCHAR(255) UNIQUE NOT NULL,
    CONSTRAINT DIRECTORS_PK
        PRIMARY KEY (DIRECTOR_ID)
);

CREATE TABLE IF NOT EXISTS MPA_RATING
(
    MPA_RATING_ID INTEGER      NOT NULL UNIQUE,
    NAME          VARCHAR(255) NOT NULL UNIQUE,
    CONSTRAINT MPA_RATING_PK
        PRIMARY KEY (MPA_RATING_ID)
);

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID  BIGINT UNIQUE AUTO_INCREMENT,
    EMAIL    VARCHAR(255) NOT NULL UNIQUE,
    LOGIN    VARCHAR(255) NOT NULL UNIQUE,
    NAME     VARCHAR(255) NOT NULL,
    BIRTHDAY DATE,
    CONSTRAINT USERS_PK
        PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    USER_ID   BIGINT,
    FRIEND_ID BIGINT,
    CONSTRAINT FRIENDS_PK
        PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT FRIENDS_USER_ID_CONFIRMING_FOREIGN
        FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FRIENDS_USER_ID_ADDING_FOREIGN
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID   INT AUTO_INCREMENT,
    GENRE_NAME VARCHAR(255) NOT NULL UNIQUE,
    CONSTRAINT GENRES_PK
        PRIMARY KEY (GENRE_ID)
);


CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID       BIGINT AUTO_INCREMENT,
    NAME            VARCHAR(255) NOT NULL,
    DESCRIPTION     VARCHAR(255) NOT NULL,
    RELEASE_DATE    DATE         NOT NULL,
    DURATION_IN_MIN BIGINT  NOT NULL,
    MPA_RATING_ID INTEGER NOT NULL,
    CONSTRAINT FILMS_PK
        PRIMARY KEY (FILM_ID),
    CONSTRAINT "FILM_MPA_RATING_ID_FOREIGN"
        FOREIGN KEY (MPA_RATING_ID) REFERENCES MPA_RATING (MPA_RATING_ID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS LIKES
(
    FILM_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    CONSTRAINT LIKES_PK
        PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT LIKES_USER_ID_FOREIGN
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    CONSTRAINT LIKES_FILM_ID_FOREIGN
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    FILM_GENRE_ID BIGINT AUTO_INCREMENT,
    FILM_ID       BIGINT  NOT NULL,
    GENRE_ID      INTEGER NOT NULL,
    CONSTRAINT FILM_GENRE_PK
        PRIMARY KEY (FILM_GENRE_ID),
    CONSTRAINT FILM_GENRE_FILM_ID_FOREIGN
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT FILM_GENRE_GENRE_ID_FOREIGN
        FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEWS
(
    REVIEW_ID   INTEGER AUTO_INCREMENT,
    CONTENT     VARCHAR(1000) NOT NULL,
    IS_POSITIVE BOOLEAN       NOT NULL,
    USER_ID     INTEGER       NOT NULL,
    FILM_ID     INTEGER       NOT NULL,
    CONSTRAINT REVIEWS_PK
        PRIMARY KEY (REVIEW_ID),
    CONSTRAINT REVIEWS_FILMS_FILM_ID_FK
        FOREIGN KEY (FILM_ID) REFERENCES FILMS ON DELETE CASCADE,
    CONSTRAINT REVIEWS_USERS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEWS
(
    REVIEW_ID   INTEGER AUTO_INCREMENT,
    CONTENT     VARCHAR(1000) NOT NULL,
    IS_POSITIVE BOOLEAN      NOT NULL,
    USER_ID     INTEGER      NOT NULL,
    FILM_ID     INTEGER      NOT NULL,
    CONSTRAINT REVIEWS_PK
        PRIMARY KEY (REVIEW_ID),
    CONSTRAINT REVIEWS_FILMS_FILM_ID_FK
        FOREIGN KEY (FILM_ID) REFERENCES FILMS ON DELETE CASCADE,
    CONSTRAINT REVIEWS_USERS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEWS_LIKES
(
    REVIEW_ID INTEGER NOT NULL,
    USER_ID   INTEGER NOT NULL,
    SCORE     INTEGER NOT NULL,
    CONSTRAINT REVIEWS_LIKES_PK
        PRIMARY KEY (REVIEW_ID, USER_ID),
    CONSTRAINT REVIEWS_LIKES_REVIEWS_REVIEW_ID_FK
        FOREIGN KEY (REVIEW_ID) REFERENCES REVIEWS ON DELETE CASCADE,
    CONSTRAINT REVIEWS_LIKES_USERS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FEEDS
(
    EVENT_ID   INTEGER AUTO_INCREMENT,
    TIMESTAMP  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    USER_ID    INTEGER NOT NULL,
    EVENT_TYPE VARCHAR(10) NOT NULL,
    OPERATION  VARCHAR(10) NOT NULL,
    ENTITY_ID  INTEGER NOT NULL,
    CONSTRAINT FEEDS_PK
        PRIMARY KEY (EVENT_ID),
    CONSTRAINT FEEDS_USERS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_DIRECTOR
(
    FILM_ID     BIGINT NOT NULL,
    DIRECTOR_ID BIGINT NOT NULL,
    PRIMARY KEY (DIRECTOR_ID, FILM_ID),
    CONSTRAINT FILM_DIRECTORS_DIRECTORS_FOREIGN
        FOREIGN KEY (DIRECTOR_ID) REFERENCES DIRECTORS (DIRECTOR_ID) ON DELETE CASCADE,
    CONSTRAINT FILM_DIRECTORS_FILMS_FOREIGN
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE
);